{"version":3,"file":"ng-progress.service.d.ts","sources":["ng-progress.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { NgProgressState } from '../models/ng-progress.state';\r\nexport declare class NgProgress {\r\n    /** Initial state */\r\n    initState: NgProgressState;\r\n    /** Progress state */\r\n    state$: BehaviorSubject<NgProgressState>;\r\n    /** Trickling stream */\r\n    trickling$: Subject<{}>;\r\n    progress: number;\r\n    maximum: number;\r\n    minimum: number;\r\n    speed: number;\r\n    trickleSpeed: number;\r\n    /** Is progress started */\r\n    readonly isStarted: boolean;\r\n    /** Progress start event */\r\n    readonly started: Observable<boolean>;\r\n    /** Progress ended event */\r\n    readonly ended: Observable<boolean>;\r\n    constructor();\r\n    /** Start */\r\n    start(): void;\r\n    /** Done */\r\n    done(): void;\r\n    /**\r\n     * Increment the progress\r\n     * @param amount\r\n     */\r\n    inc(amount?: number): void;\r\n    /**\r\n     * Set the progress\r\n     * @param n - Progress value\r\n     */\r\n    set(n: number): void;\r\n    /**\r\n     * Update progress state\r\n     * @param progress - Progress value\r\n     * @param isActive - Progress active\r\n     */\r\n    private updateState(progress, isActive);\r\n}\r\n"]}